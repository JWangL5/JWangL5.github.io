<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>Opencv - 系列 - Cell × Brain</title>
        <link>https://jwangl5.github.io/series/opencv/</link>
        <description>Opencv - 系列 - Cell × Brain</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>l392537594@163.com (卢旺)</managingEditor>
            <webMaster>l392537594@163.com (卢旺)</webMaster><lastBuildDate>Tue, 07 Apr 2020 00:00:00 &#43;0800</lastBuildDate><atom:link href="https://jwangl5.github.io/series/opencv/" rel="self" type="application/rss+xml" /><item>
    <title>OpenCV | 空间域处理之邻域操作/几何变换/形态学操作</title>
    <link>https://jwangl5.github.io/posts/python-scripts/opencv/image_basic_processing_by_opencv/</link>
    <pubDate>Tue, 07 Apr 2020 00:00:00 &#43;0800</pubDate><author>
                        <name>卢旺</name><uri>https://jwangl5.github.io/authors/%E5%8D%A2%E6%97%BA</uri><email>l392537594@163.com</email></author><guid>https://jwangl5.github.io/posts/python-scripts/opencv/image_basic_processing_by_opencv/</guid>
    <description><![CDATA[在给定图像的像素上直接进行运算的方法称之为图像空间域的处理；而根据所操作的像素的多少和类型分为： 单像素操作（点运算）：即对单个像素点进行处理]]></description>
</item><item>
    <title>OpenCV | 图像的空间域处理之点运算</title>
    <link>https://jwangl5.github.io/posts/python-scripts/opencv/image_point_operations_in_spatial_domain_by_opencv/</link>
    <pubDate>Tue, 25 Feb 2020 00:00:00 &#43;0800</pubDate><author>
                        <name>卢旺</name><uri>https://jwangl5.github.io/authors/%E5%8D%A2%E6%97%BA</uri><email>l392537594@163.com</email></author><guid>https://jwangl5.github.io/posts/python-scripts/opencv/image_point_operations_in_spatial_domain_by_opencv/</guid>
    <description><![CDATA[​ 在给定图像的像素上直接进行运算的方法称之为图像空间域的处理；而根据所操作的像素的多少和类型分为： 单像素操作（点运算）：即对单个像素点进行处]]></description>
</item><item>
    <title>OpenCV | 图像的显示与存储</title>
    <link>https://jwangl5.github.io/posts/python-scripts/opencv/image_display_and_storage_by_opencv/</link>
    <pubDate>Sun, 23 Feb 2020 00:00:00 &#43;0800</pubDate><author>
                        <name>卢旺</name><uri>https://jwangl5.github.io/authors/%E5%8D%A2%E6%97%BA</uri><email>l392537594@163.com</email></author><guid>https://jwangl5.github.io/posts/python-scripts/opencv/image_display_and_storage_by_opencv/</guid>
    <description><![CDATA[一、python-opencv的安装方法一：使用pip命令 opencv依赖于Numpy和wheel两个包，需要提前安装 若下载很慢可以使用 -i 设]]></description>
</item></channel>
</rss>
